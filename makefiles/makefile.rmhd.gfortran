All: guangqi
OBJ_DIR = obj
VPATH = src:modules/problem

objects = $(addprefix $(OBJ_DIR)/, datastructure.o tree_module.o mathlib.o phylib.o	\
	constant_gamma_eos.o eos_h2_HI.o eos_h_he.o eos_h2_HI_HII.o eos_HI_HII.o eos_analytic.o \
	eos.o)
objects += $(addprefix $(OBJ_DIR)/, problem.o)
objects += $(addprefix $(OBJ_DIR)/, communication_1d.o communication.o load_module.o	\
	passivescalars.o radiation_common_functions.o 	\
	boundary.o amr_module.o io_out.o io_in.o	\
	hllc.o eos_hllc_analytic.o hydro.o \
	gravity.o petsc_fld_1d.o petsc_fld.o \
	radiation.o cooling.o source_control.o \
	recon_evolve.o muscl.o hydroscheme.o rmhd.o)
ieos ?= 1
ieosmodule ?=1
iopacity ?= 1
isolver ?= 1
iconverge ?= 0
irecord ?= 0
imodify ?= 0
usersource ?= 0
vceiling ?= 0
usersource ?= 0
user_amr ?= 0
include modules/problem/makefile.problem
eosflag = -Dieos=$(ieos) -Dieosmodule=$(ieosmodule)
opacityflag = -Diopacity=$(iopacity)
solverflag = -Disolver=$(isolver)
convergeflag = -Diconverge=$(iconverge)
recordflag = -Direcord=$(irecord)
modifyflag = -Dimodify=$(imodify)
sourceflag = -Dusersource=$(usersource)
vceilingflag = -Dvceiling=$(vceiling)
amrflag = -Duser_amr=$(user_amr)
guangqi_flags = $(eosflag) $(opacityflag) $(solverflag) $(convergeflag) $(recordflag) $(modifyflag) $(amrflag) \
	$(sourceflag) $(vceilingflag)
ompfflag = -fopenmp
amrflag = -Duser_amr=$(user_amr)
sourceflag = -Dusersource=$(usersource)
guangqi_flags = $(eosflag) $(opacityflag) $(solverflag) $(convergeflag) $(ompfflag) $(recordflag) $(amrflag) $(sourceflag)

CC = mpicc
FC = mpif90

#FFLAGS += ${PETSC_FC_INCLUDES} -cpp -ffree-line-length-512 -fcheck=all -g -O2 $(guangqi_flags)
#FFLAGS += ${PETSC_FC_INCLUDES} -cpp -ffree-line-length-512 -fcheck=all -g -fbacktrace -O0 $(guangqi_flags)
FFLAGS += ${PETSC_FC_INCLUDES} -cpp -ffree-line-length-512 -O3	$(guangqi_flags)
PETSC_DIR=petsc's directory

#guangqi's environment
HDF5 = hdf5 directory
openmpi = openmpi directory
include ${PETSC_DIR}/lib/petsc/conf/variables
include ${PETSC_DIR}/lib/petsc/conf/rules
include_path += -I$(HDF5)/include -I$(openmpi)/include -I$(PETSC_DIR)/include
blas = -lrefblas
lapack = -llapack
LIB_DIR = -L$(HDF5)/lib
LIBS = -lhdf5 -lhdf5_fortran $(lapack) $(blas) -lm

#$(info $$PETSC_LIB is [${PETSC_LIB}])
#$(info $$FLINKER is [${FLINKER}])
linker = $(FC) -fPIC $(FFLAGS)

$(OBJ_DIR)/%.o: %.f90
	${linker} ${PETSC_LIB} $(include_path) -c $< -o $@
%.o: %.f90
	${linker} ${PETSC_LIB} $(include_path) -c $< -o $@


guangqi: $(objects)
	${linker} $(objects) $(LIB_DIR) $(LIBS) ${PETSC_LIB} -o guangqi

.PHONY: clean
clean::
	rm -f $(objects) *.mod guangqi gmon.out analysis.txt
